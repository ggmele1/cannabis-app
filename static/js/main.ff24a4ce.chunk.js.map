{"version":3,"sources":["config.js","SearchBar.js","Nav.js","Strain.js","Landing.js","App.js","index.js","images/DopestData.png","images/image.png"],"names":["config","apiKey","authDomain","databaseURL","useStyles","makeStyles","theme","marginAutoContainer","marginTop","textAlign","display","flexDirection","alignItems","input","fontFamily","fontWeight","marginBottom","background","color","border","borderRadius","textInput","links","SearchBar","props","useState","inputValue","setInputValue","classes","className","Container","size","Typography","variant","Autocomplete","disableClearable","loadingText","freeSolo","id","options","data","getOptionLabel","option","name","style","width","renderInput","params","TextField","label","onInputChange","event","newInputValue","onClick","getStrainByName","Link","Nav","src","logo","alt","cards","maxWidth","chipWrapper","justifyContent","flexWrap","margin","spacing","Strain","race","description","medical","positive","negative","imageName","imgType","setImgType","imageCount","setImageCount","onError","image","Card","CardContent","Divider","length","map","item","Chip","type","setIsSuccess","setStrainName","Landing","Box","component","setIsAdult","createMuiTheme","typography","join","App","strainRace","setStrainRace","strainDesc","setStrainDesc","setMedical","setPositive","setNegative","strainImageName","setStrainImageName","strainName","filteredSearchData","setFilteredSearchData","isAdult","isSuccess","Firebase","apps","initializeApp","useEffect","database","ref","on","snapshot","DB_NAMES","val","forEach","strain","push","a","axios","get","then","response","matches","toLowerCase","desc","getStrainDetails","getStrainImageName","console","log","getEffectsData","medicalEffects","positiveEffects","negativeEffects","Object","entries","value","replace","ThemeProvider","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ff24a4ce.chunk.js","sourcesContent":["const config = {\n    apiKey: \"AIzaSyCU2qKRDnLq9uY0eSLU27UC60dcB_M3Sz8\",\n    authDomain: \"cannabis-app-43a1d.firebaseapp.com\",\n    databaseURL: \"https://cannabis-app-43a1d.firebaseio.com\",\n  }\n   \n  export default config;","import React, { useState } from \"react\";\nimport { TextField, Typography, Container, Link } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport './App.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  marginAutoContainer: {\n    marginTop: 25,\n    textAlign: \"left\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  input: {\n    fontFamily: 'Lato',\n    fontWeight: '900',\n    marginTop: 25,\n    marginBottom: 10,\n    background: '#31ab65',\n    color: '#141414',\n    border: '2px solid',\n    borderRadius: 3,\n  },\n  textInput: {\n    fontFamily: 'Lato',\n    fontWeight: '900',\n  },\n  links: {\n\n  }\n}));\n\nconst SearchBar = (props) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const preventDefault = (event) => event.preventDefault();\n\n  const handleSubmit = () => {\n    props.getStrainByName(inputValue);\n  };\n\n  const handleLink = (event) => {\n    props.getStrainByName(event);\n  }\n  const classes = useStyles();\n  return (\n    <div className=\"search\">\n      <Container size=\"md\" className={classes.marginAutoContainer}>\n        <Typography variant=\"h3\" className=\"primary header\">\n          Search a cannabis strain.\n        </Typography>\n      <Autocomplete\n      disableClearable\n        className={classes.input}\n        loadingText=\"Loading\"\n        freeSolo=\"true\"\n        id=\"combo-box-demo\"\n        options={props.data}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 340, }}\n        renderInput={(params) => (\n        <TextField {...params} label=\"Search Strain\" variant=\"filled\" className={classes.textInput}/>\n        )}\n        onInputChange={(event, newInputValue) => setInputValue(newInputValue)}\n      />\n      <button className=\"btn-fill btn-bottom\" onClick={() => handleSubmit()}>Search</button>\n      <div className=\"suggestions\">\n          <Typography variant=\"h6\" className=\"secondary\">\n            Popular Searches\n          </Typography>\n          <div className=\"suggestion-links\">\n              <Link className=\"link\">Gelato</Link>\n              <Link className=\"link\">Jack Herer</Link>\n              <Link className=\"link\">OG Kush</Link>\n          </div>\n      </div>\n      </Container>\n    </div>\n  );\n};\nexport default SearchBar;\n","import React from 'react';\nimport logo from './images/DopestData.png';\nimport './App.css';\nconst Nav = () => {\n    return (\n        <div className=\"nav\">\n            <img src={logo} alt=\"logo\" className=\"logo\" />\n        </div>\n    )\n}\n\nexport default Nav;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {\n  Typography,\n  Container,\n  Chip,\n  Card,\n  CardContent,\n  Divider,\n} from \"@material-ui/core\";\nimport image from \"./images/image.png\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  cards: {\n    marginTop: 25,\n    background: \"#ebebeb\",\n    borderRadius: 10,\n    maxWidth: 600,\n  },\n  chipWrapper: {\n    display: \"flex\",\n    marginTop: 8,\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nconst Strain = (props) => {\n  const {\n    name,\n    race,\n    description,\n    medical,\n    positive,\n    negative,\n    imageName,\n  } = props;\n  const [imgType, setImgType] = useState(\"png\");\n  const [imageCount, setImageCount] = useState(1);\n\n  const returnToSearch = () => {\n    props.setIsSuccess(false);\n    props.setStrainName(\"\");\n  }\n\n  const imageFail = () => {\n    setImageCount(imageCount + 1);\n    setImgType(\"jpg\");\n  };\n  const classes = useStyles();\n  return (\n    <Container size=\"md\">\n      <div className=\"strain-component\">\n        {imageName && imageCount < 3 ? (\n          <div className=\"image-wrapper\">\n            <img\n              className=\"strain-image\"\n              src={`https://images.leafly.com/flower-images/${imageName}.${imgType}`}\n              onError={imageFail}\n              alt=\"Strain\"\n            />\n          </div>\n        ) : null}\n        {imageName && imageCount === 3 ? (\n          <div className=\"image-wrapper\">\n            <img src={image} alt=\"default\" className=\"strain-image\" />\n          </div>\n        ) : null}\n        <Typography variant=\"h3\" className=\"header decorate\">\n          {name}\n        </Typography>\n        <Typography variant=\"h5\" className=\"sub-header decorate\">\n          {race}\n        </Typography>\n        <Typography variant=\"h6\" className=\"secondary\">\n          description\n        </Typography>\n        <Typography variant=\"body1\" className=\"primary body\">\n          {description}\n        </Typography>\n        <Typography variant=\"h4\" className=\"header primary\">\n          Effects\n        </Typography>\n\n        <Card className={classes.cards}>\n          <CardContent>\n            <Typography variant=\"h6\" className=\"secondary\">\n              Used for\n            </Typography>\n            <Divider />\n            {medical.length > 1 ? (\n              <div className={classes.chipWrapper}>\n                {medical.map((item) => (\n                  <Chip label={item} variant=\"outlined\" />\n                ))}\n              </div>\n            ) : null}\n          </CardContent>\n        </Card>\n\n        <Card className={classes.cards}>\n          <CardContent>\n            <Typography variant=\"h6\" className=\"secondary\">\n              positive\n            </Typography>\n            <Divider />\n            {positive.length > 1 ? (\n              <div className={classes.chipWrapper}>\n                {positive.map((item) => (\n                  <Chip label={item} variant=\"outlined\" />\n                ))}\n              </div>\n            ) : null}\n          </CardContent>\n        </Card>\n\n        <Card className={classes.cards}>\n          <CardContent>\n            <Typography variant=\"h6\" className=\"secondary\">\n              negative\n            </Typography>\n            <Divider />\n            {negative.length > 1 ? (\n              <div className={classes.chipWrapper}>\n                {negative.map((item) => (\n                  <Chip label={item} variant=\"outlined\" />\n                ))}\n              </div>\n            ) : null}\n          </CardContent>\n        </Card>\n        <Typography variant=\"h4\" className=\"header primary\">\n          Similar Strains\n        </Typography>\n        <div className=\"other-strains-wrapper\">\n          <div className=\"other-strains\">\n            <img\n              src=\"https://images.leafly.com/flower-images/gelato.jpg\"\n              alt=\"default\"\n              className=\"other-strain-image\"\n            />\n            <Divider className=\"colored-divider\" />\n            <div className=\"other-strain-typography\">\n              <Typography variant=\"body\" className=\"header-mini primary\">\n                Jack Herer\n              </Typography>\n              <Typography variant=\"body2\" className=\"header-mini primary\">\n                Sativa\n              </Typography>\n            </div>\n          </div>\n          \n\n          <div className=\"other-strains\">\n            <img\n              src=\"https://images.leafly.com/flower-images/gelato.jpg\"\n              alt=\"default\"\n              className=\"other-strain-image\"\n            />\n            <Divider className=\"colored-divider\" />\n            <div className=\"other-strain-typography\">\n              <Typography variant=\"body\" className=\"header-mini primary\">\n                Jack Herer\n              </Typography>\n              <Typography variant=\"body2\" className=\"header-mini primary\">\n                Sativa\n              </Typography>\n            </div>\n          </div>\n\n          <div className=\"other-strains\">\n            <img\n              src=\"https://images.leafly.com/flower-images/gelato.jpg\"\n              alt=\"default\"\n              className=\"other-strain-image\"\n            />\n            <Divider className=\"colored-divider\" />\n            <div className=\"other-strain-typography\">\n              <Typography variant=\"body\" className=\"header-mini primary\">\n                Jack Herer\n              </Typography>\n              <Typography variant=\"body2\" className=\"header-mini primary\">\n                Sativa\n              </Typography>\n            </div>\n          </div>\n        </div>\n\n        <button type=\"submit\" className=\"btn-fill btn-bottom\" onClick={() => returnToSearch()}>\n              Back To Search\n            </button>\n\n      </div>\n    </Container>\n  );\n};\nexport default Strain;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container, Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  marginAutoContainer: {\n    textAlign: \"left\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst Landing = (props) => {\n  const classes = useStyles();\n  return (\n    <div className=\"landing\">\n      <Container maxWidth=\"md\" className={classes.marginAutoContainer}>\n        <div className=\"landing-info\">\n          <Typography variant=\"h3\" className=\"primary header\">\n            A free & simple cannabis information app.\n          </Typography>\n          <Typography variant=\"h6\" className=\"primary body\">\n            We have a large database of cannabis data. Search a cannabis strain\n            and get some{\" \"}\n            <Box component=\"span\" className=\"primary header span\">\n              Dope Data.\n            </Box>\n          </Typography>\n        </div>\n        <div className=\"disclaimer\">\n          <Typography variant=\"h6\" className=\"primary header span\">\n            Are you over 21?\n          </Typography>\n          <Typography variant=\"body2\">\n            Cannabis is a drug and should be consumed legally and responsibly.\n          </Typography>\n          <div className=\"button-wrapper\">\n            <button type=\"submit\" className=\"btn-fill btn-bottom\" onClick={() => props.setIsAdult(true)}>\n              Yes I am\n            </button>\n            <button type=\"submit\" className=\"btn-fill btn-bottom\">\n              No I am Not\n            </button>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport Firebase from \"firebase\";\nimport SearchBar from \"./SearchBar\";\nimport Nav from './Nav';\nimport Strain from \"./Strain\";\nimport Landing from \"./Landing\"\nimport {TextField} from \"@material-ui/core/TextField\";\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Lato',\n      'sans-serif',\n    ].join(','),\n  },});\n\n\nconst App = () => {\n  const API_KEY = \"EwZa0Jz\";\n\n  // STATE HOOKS\n  const [strainRace, setStrainRace] = useState(\"\");\n  const [strainDesc, setStrainDesc] = useState(\"\");\n  const [medical, setMedical] = useState(\"\");\n  const [positive, setPositive] = useState(\"\");\n  const [negative, setNegative] = useState(\"\");\n  const [strainImageName, setStrainImageName] = useState(false);\n  const [strainName, setStrainName] = useState(\"\");\n  const [filteredSearchData, setFilteredSearchData] = useState();\n  const [isAdult, setIsAdult] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n\n  if (Firebase.apps.length === 0) {\n    Firebase.initializeApp(config);\n  }\n\n  useEffect(() => {\n    const ref = Firebase.database().ref(\"/\");\n    ref.on(\"value\", (snapshot) => {\n      const DB_NAMES = [];\n      const getNameData = snapshot.val();\n      getNameData.forEach((strain) => {\n        DB_NAMES.push({ name: strain });\n      });\n      setFilteredSearchData(DB_NAMES);\n    });\n  }, []);\n\n  const getStrainByName = async (strain) => {\n    try {\n      await axios\n        .get(\n          `https://strainapi.evanbusse.com/${API_KEY}/strains/search/name/${strain}`\n        )\n        .then(function (response) {\n          response.data.map((matches) => {\n            if (strain.toLowerCase() === matches.name.toLowerCase()) {\n              setStrainName(matches.name);\n              setStrainRace(matches.race);\n              setStrainDesc(matches.desc);\n              getStrainDetails(matches.id); \n            }\n          });\n          getStrainImageName(strain);\n          setIsSuccess(true);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStrainDetails = async (strain) => {\n    try {\n      await axios\n        .get(\n          `https://strainapi.evanbusse.com/${API_KEY}/strains/data/effects/${strain}`\n        )\n        .then(function (response) {\n          const { medical, positive, negative } = response.data;\n          getEffectsData(medical, positive, negative);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getEffectsData = (medical, positive, negative) => {\n    const medicalEffects = [];\n    const positiveEffects = [];\n    const negativeEffects = [];\n\n    Object.entries(medical).map(([key, value]) => medicalEffects.push(value));\n    setMedical(medicalEffects);\n\n    Object.entries(positive).map(([key, value]) => positiveEffects.push(value));\n    setPositive(positiveEffects);\n\n    Object.entries(negative).map(([key, value]) => negativeEffects.push(value));\n    setNegative(negativeEffects);\n  };\n\n  const getStrainImageName = (data) => {\n    let name = data.replace(/\\s/g, \"-\").toLowerCase();\n    setStrainImageName(name);\n  };\n\n  // const getAllStrains = () => {\n  //     try {\n  //         axios.get('http://strainapi.evanbusse.com/EwZa0Jz/strains/search/all')\n  //         .then(function (response) {\n  //             let info = response.data;\n  //             let names = Object.keys(info)\n  //             // Firebase.database().ref(\"/\").set([{name: names}])\n  //         })\n  //     } catch (error) {\n  //         console.log(error)\n  //     }\n  // }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Nav />\n    <div>\n      {!isAdult ? <Landing setIsAdult={setIsAdult}/> : null}\n\n      {isAdult && !isSuccess ? <SearchBar data={filteredSearchData} getStrainByName={getStrainByName} /> : null}\n      \n      {!strainName ? null :\n      <Strain\n        name={strainName}\n        race={strainRace}\n        description={strainDesc}\n        medical={medical}\n        positive={positive}\n        negative={negative}\n        imageName={strainImageName}\n        setIsSuccess={setIsSuccess}\n        setStrainName={setStrainName}\n      />\n      }\n\n    </div>\n    </ThemeProvider>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/DopestData.d7636b3e.png\";","module.exports = __webpack_public_path__ + \"static/media/image.18a0a23e.png\";"],"sourceRoot":""}