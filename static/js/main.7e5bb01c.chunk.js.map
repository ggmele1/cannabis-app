{"version":3,"sources":["config.js","imageSources.js","StrainMini.js","SearchBar.js","Nav.js","SimilarStrains.js","Strain.js","Landing.js","App.js","index.js","images/DopestData.png","images/image.png"],"names":["config","apiKey","authDomain","databaseURL","imageSources","StrainMini","props","useState","preSelect","map","item","key","className","onClick","getStrainByName","indexOf","toString","handleLink","src","Math","floor","random","alt","Divider","Typography","variant","useStyles","makeStyles","theme","marginAutoContainer","marginTop","textAlign","display","flexDirection","alignItems","input","fontFamily","fontWeight","marginBottom","background","color","border","borderRadius","textInput","links","SearchBar","inputValue","setInputValue","classes","Container","size","Autocomplete","disableClearable","loadingText","freeSolo","id","options","data","getOptionLabel","option","name","style","width","renderInput","params","TextField","label","onInputChange","event","newInputValue","Nav","logo","SimilarStrains","similarStrainsList","length","race","cards","maxWidth","chipWrapper","justifyContent","flexWrap","margin","spacing","Strain","description","medical","positive","negative","imageName","setIsPng","setIsJpg","setIsDefault","isPng","isJpg","isDefault","onError","image","strainRace","Card","CardContent","Chip","type","setIsSuccess","setStrainName","Landing","Box","component","setIsAdult","createMuiTheme","typography","join","App","setStrainRace","strainDesc","setStrainDesc","setMedical","setPositive","setNegative","strainImageName","setStrainImageName","strainName","filteredSearchData","setFilteredSearchData","isAdult","isSuccess","imageCount","setImageCount","setSimilarStrainsList","Firebase","apps","initializeApp","useEffect","database","ref","on","snapshot","DB_NAMES","val","forEach","strain","push","a","axios","get","then","response","matches","toLowerCase","desc","getStrainDetails","getSimilarStrains","getStrainImageName","console","log","getEffectsData","medicalEffects","positiveEffects","negativeEffects","Object","entries","value","replace","similarStrainsArray","i","ThemeProvider","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7e5bb01c.chunk.js","sourcesContent":["const config = {\n    apiKey: \"AIzaSyCU2qKRDnLq9uY0eSLU27UC60dcB_M3Sz8\",\n    authDomain: \"cannabis-app-43a1d.firebaseapp.com\",\n    databaseURL: \"https://cannabis-app-43a1d.firebaseio.com\",\n  }\n   \n  export default config;","const imageSources = [\n    \"https://images.leafly.com/flower-images/purple-punch-fixed.jpg\",\n    \"https://images.leafly.com/flower-images/wedding-cake.jpg\",\n    \"https://images.leafly.com/flower-images/gg-4.jpg\",\n    \"https://images.leafly.com/flower-images/sour-diesel.jpg\",\n    \"https://images.leafly.com/flower-images/blue-dream.png\",\n]\nexport default imageSources;","import React, {useState} from 'react';\nimport './App.css';\nimport imageSources from \"./imageSources\";\nimport {\n    Typography,\n    Divider,\n  } from \"@material-ui/core\";\n\n\n  \n  \n  const StrainMini = (props) => {\n    const [preSelect, setPreSelect] = useState([\"Jack Herer\", \"Gelato\", \"OG Kush\"])\n\n    \n    const handleLink = (item) => {\n        props.getStrainByName(preSelect[preSelect.indexOf(item.toString()).toString()])\n      }\n    \n\n    return (\n        <div>\n            {preSelect.map((item, key) => (\n                <button key={key} className=\"link\" onClick={() => handleLink(item)}>\n                <div className=\"other-strains-wrapper\">\n                  <div className=\"other-strains\">\n                    <img\n                      src={imageSources[Math.floor((Math.random() * 4) + 1)]}\n                      alt=\"default\"\n                      className=\"other-strain-image\"\n                    />\n                    <Divider className=\"colored-divider\" />\n                    <div className=\"other-strain-typography\">\n                      <Typography variant=\"subtitle1\" className=\"header-mini primary\">\n                        {item}\n                      </Typography>\n                      <Typography variant=\"body2\" className=\"header-mini primary\">\n                        Sativa\n                      </Typography>\n                    </div>\n                  </div>\n                  </div>\n                </button>\n            ))\n            }\n        </div>\n\n    )\n}\n\nexport default StrainMini;","import React, { useState } from \"react\";\nimport { TextField, Typography, Container } from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport StrainMini from './StrainMini.js';\nimport './App.css';\n\n\nconst useStyles = makeStyles((theme) => ({\n  marginAutoContainer: {\n    marginTop: 25,\n    textAlign: \"left\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  input: {\n    fontFamily: 'Lato',\n    fontWeight: '900',\n    marginTop: 25,\n    marginBottom: 10,\n    background: '#31ab65',\n    color: '#141414',\n    border: '2px solid',\n    borderRadius: 3,\n  },\n  textInput: {\n    fontFamily: 'Lato',\n    fontWeight: '900',\n  },\n  links: {\n\n  }\n}));\n\nconst SearchBar = (props) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleSubmit = () => {\n    props.getStrainByName(inputValue);\n  };\n\n\n  const classes = useStyles();\n  return (\n    <div className=\"search\">\n      <Container size=\"md\" className={classes.marginAutoContainer}>\n        <Typography variant=\"h3\" className=\"primary header\">\n          Search a cannabis strain.\n        </Typography>\n      <Autocomplete\n      disableClearable\n        className={classes.input}\n        loadingText=\"Loading\"\n        freeSolo=\"true\"\n        id=\"combo-box-demo\"\n        options={props.data}\n        getOptionLabel={(option) => option.name}\n        style={{ width: 340, }}\n        renderInput={(params) => (\n        <TextField {...params} label=\"Search Strain\" variant=\"filled\" className={classes.textInput}/>\n        )}\n        onInputChange={(event, newInputValue) => setInputValue(newInputValue)}\n      />\n      <button className=\"btn-fill btn-bottom\" onClick={() => handleSubmit()}>Search</button>\n          <Typography variant=\"h6\" className=\"secondary\">\n            Popular Searches\n          </Typography>\n      <div className=\"suggestions\">\n\n          <StrainMini getStrainByName={props.getStrainByName}/>\n      </div>\n      </Container>\n    </div>\n  );\n};\nexport default SearchBar;\n","import React from 'react';\nimport logo from './images/DopestData.png';\nimport './App.css';\nconst Nav = () => {\n    return (\n        <div className=\"nav\">\n            <img src={logo} alt=\"logo\" className=\"logo\" />\n        </div>\n    )\n}\n\nexport default Nav;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport imageSources from \"./imageSources\";\nimport {\n    Typography,\n    Divider,\n  } from \"@material-ui/core\";\n\n\n  const SimilarStrains = (props) => {   \n    const handleLink = (item) => {\n        props.getStrainByName(item)\n      }\n    \n    return (\n      <div>\n        {props.similarStrainsList.length !== 6 ? <div>Loading</div> :\n          <div>\n              {props.similarStrainsList.map((item, key) => (\n                  <button key={key} className=\"link\" onClick={() => handleLink(item.name)}>\n                  <div className=\"other-strains-wrapper\">\n                    <div className=\"other-strains\">\n                      <img\n                        src={imageSources[Math.floor((Math.random() * 4) + 1)]}\n                        alt=\"default\"\n                        className=\"other-strain-image\"\n                      />\n                      <Divider className=\"colored-divider\" />\n                      <div className=\"other-strain-typography\">\n                        <Typography variant=\"subtitle1\" className=\"header-mini primary\">\n                          {item.name}\n                        </Typography>\n                        <Typography variant=\"body2\" className=\"header-mini primary\">\n                          {item.race}\n                        </Typography>\n                      </div>\n                    </div>\n                    </div>\n                  </button>\n              ))\n              }\n          </div>\n        }\n      </div>\n\n    )\n}\n\nexport default SimilarStrains;","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport SimilarStrains from './SimilarStrains';\nimport {\n  Typography,\n  Container,\n  Chip,\n  Card,\n  CardContent,\n  Divider,\n} from \"@material-ui/core\";\nimport image from \"./images/image.png\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  cards: {\n    marginTop: 25,\n    background: \"#ebebeb\",\n    borderRadius: 10,\n    maxWidth: 600,\n  },\n  chipWrapper: {\n    display: \"flex\",\n    marginTop: 8,\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nconst Strain = (props) => {\n  const {\n    name,\n    description,\n    medical,\n    positive,\n    negative,\n    imageName,\n    setIsPng,\n    setIsJpg,\n    setIsDefault,\n    isPng,\n    isJpg,\n    isDefault    \n  } = props;\n\n\n\n  const returnToSearch = () => {\n    props.setIsSuccess(false);\n    props.setStrainName(\"\");\n  }\n\n  const imageFailPng = () => {\n    setIsPng(!isPng);\n    setIsJpg(!isJpg);\n  };\n\n  const imageFailJpg = () => {\n    setIsJpg(!isJpg);\n    setIsDefault(!isDefault);\n  }\n\n  const classes = useStyles();\n  return (\n    <Container size=\"md\">\n      <div className=\"strain-component\">\n\n\n\n        {imageName && isPng ? (\n          <div className=\"image-wrapper\">\n            <img\n              className=\"strain-image\"\n              src={`https://images.leafly.com/flower-images/${imageName}.png`}\n              onError={imageFailPng}\n              alt=\"Strain\"\n            />\n          </div>\n        ) : null}\n\n\n        {imageName && isJpg ? (\n          <div className=\"image-wrapper\">\n            <img\n              className=\"strain-image\"\n              src={`https://images.leafly.com/flower-images/${imageName}.jpg`}\n              onError={imageFailJpg}\n              alt=\"Strain\"\n            />\n          </div>\n        ) : null}\n\n\n        {imageName && isDefault ? (\n          <div className=\"image-wrapper\">\n            <img src={image} alt=\"default\" className=\"strain-image\" />\n          </div>\n        ) : null}\n        <div className=\"strain-header-wrapper\">\n        <Typography variant=\"h3\" className=\"header decorate\">\n          {name}\n        </Typography>\n        <Typography variant=\"h5\" className=\"sub-header decorate\">\n          {props.strainRace}\n        </Typography>\n        </div>\n        <Typography variant=\"h6\" className=\"secondary\">\n          description\n        </Typography>\n        <Typography variant=\"body1\" className=\"primary body\">\n          {description}\n        </Typography>\n        <Typography variant=\"h4\" className=\"header primary\">\n          Effects\n        </Typography>\n\n        <Card className={classes.cards}>\n          <CardContent>\n            <Typography variant=\"h6\" className=\"secondary\">\n              Used for\n            </Typography>\n            <Divider />\n            {medical.length > 1 ? (\n              <div className={classes.chipWrapper}>\n                {medical.map((item) => (\n                  <Chip label={item} variant=\"outlined\" />\n                ))}\n              </div>\n            ) : null}\n          </CardContent>\n        </Card>\n\n        <Card className={classes.cards}>\n          <CardContent>\n            <Typography variant=\"h6\" className=\"secondary\">\n              positive\n            </Typography>\n            <Divider />\n            {positive.length > 1 ? (\n              <div className={classes.chipWrapper}>\n                {positive.map((item) => (\n                  <Chip label={item} variant=\"outlined\" />\n                ))}\n              </div>\n            ) : null}\n          </CardContent>\n        </Card>\n\n        <Card className={classes.cards}>\n          <CardContent>\n            <Typography variant=\"h6\" className=\"secondary\">\n              negative\n            </Typography>\n            <Divider />\n            {negative.length > 1 ? (\n              <div className={classes.chipWrapper}>\n                {negative.map((item) => (\n                  <Chip label={item} variant=\"outlined\" />\n                ))}\n              </div>\n            ) : null}\n          </CardContent>\n        </Card>\n        <Typography variant=\"h4\" className=\"header primary\">\n          Similar Strains\n        </Typography>\n\n        <SimilarStrains race={props.strainRace} getStrainByName={props.getStrainByName} similarStrainsList={props.similarStrainsList}/>\n       \n        <div className=\"back-button-wrapper\">\n        <button type=\"submit\" className=\"btn-fill btn-bottom long\" onClick={() => returnToSearch()}>\n              Back To Search\n        </button>\n        </div>\n\n      </div>\n    </Container>\n  );\n};\nexport default Strain;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Container, Typography, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  marginAutoContainer: {\n    textAlign: \"left\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst Landing = (props) => {\n  const classes = useStyles();\n  return (\n    <div className=\"landing\">\n      <Container maxWidth=\"md\" className={classes.marginAutoContainer}>\n        <div className=\"landing-info\">\n          <Typography variant=\"h3\" className=\"primary header\">\n            A free & simple cannabis information app.\n          </Typography>\n          <Typography variant=\"h6\" className=\"primary body\">\n            We have a large database of cannabis data. Search a cannabis strain\n            and get some{\" \"}\n            <Box component=\"span\" className=\"primary header span\">\n              Dope Data.\n            </Box>\n          </Typography>\n        </div>\n        <div className=\"disclaimer\">\n          <Typography variant=\"h6\" className=\"primary header span\">\n            Are you over 21?\n          </Typography>\n          <Typography variant=\"body2\">\n            Cannabis is a drug and should be consumed legally and responsibly.\n          </Typography>\n          <div className=\"button-wrapper\">\n            <button type=\"submit\" className=\"btn-fill btn-bottom\" onClick={() => props.setIsAdult(true)}>\n              Yes I am\n            </button>\n            <button type=\"submit\" className=\"btn-fill btn-bottom\">\n              No I am Not\n            </button>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport config from \"./config\";\nimport Firebase from \"firebase\";\nimport SearchBar from \"./SearchBar\";\nimport Nav from './Nav';\nimport Strain from \"./Strain\";\nimport Landing from \"./Landing\"\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      'Lato',\n      'sans-serif',\n    ].join(','),\n  },});\n\n\nconst App = () => {\n  const API_KEY = \"EwZa0Jz\";\n\n  // STATE HOOKS\n  const [strainRace, setStrainRace] = useState(\"\");\n  const [strainDesc, setStrainDesc] = useState(\"\");\n  const [medical, setMedical] = useState(\"\");\n  const [positive, setPositive] = useState(\"\");\n  const [negative, setNegative] = useState(\"\");\n  const [strainImageName, setStrainImageName] = useState(false);\n  const [strainName, setStrainName] = useState(\"\");\n  const [filteredSearchData, setFilteredSearchData] = useState();\n  const [isAdult, setIsAdult] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [imageCount, setImageCount] = useState(1);\n  const [similarStrainsList, setSimilarStrainsList] = useState('');\n\n\n  const [isPng, setIsPng] = useState(true);\n  const [isJpg, setIsJpg] = useState(false);\n  const [isDefault, setIsDefault] = useState(false)\n\n  if (Firebase.apps.length === 0) {\n    Firebase.initializeApp(config);\n  }\n\n  useEffect(() => {\n    const ref = Firebase.database().ref(\"/\");\n    ref.on(\"value\", (snapshot) => {\n      const DB_NAMES = [];\n      const getNameData = snapshot.val();\n      getNameData.forEach((strain) => {\n        DB_NAMES.push({ name: strain });\n      });\n      setFilteredSearchData(DB_NAMES);\n      \n    });\n  }, []);\n\n  const getStrainByName = async (strain) => {\n    try {\n      await axios\n        .get(\n          `https://strainapi.evanbusse.com/${API_KEY}/strains/search/name/${strain}`\n        )\n        .then(function (response) {\n          response.data.map((matches) => {\n            if (strain.toLowerCase() === matches.name.toLowerCase()) {\n              setStrainName(matches.name);\n              setStrainRace(matches.race);\n              setStrainDesc(matches.desc);\n              getStrainDetails(matches.id);\n              getSimilarStrains(matches.race) \n            }\n          });\n          setIsPng(true)\n          setIsJpg(false)\n          setIsDefault(false)\n          getStrainImageName(strain);\n          setIsSuccess(true);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getStrainDetails = async (strain) => {\n    try {\n      await axios\n        .get(\n          `https://strainapi.evanbusse.com/${API_KEY}/strains/data/effects/${strain}`\n        )\n        .then(function (response) {\n          console.log(response)\n          const { medical, positive, negative } = response.data;\n          getEffectsData(medical, positive, negative);\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  \n  const getEffectsData = (medical, positive, negative) => {\n    const medicalEffects = [];\n    const positiveEffects = [];\n    const negativeEffects = [];\n\n    Object.entries(medical).map(([key, value]) => medicalEffects.push(value));\n    setMedical(medicalEffects);\n\n    Object.entries(positive).map(([key, value]) => positiveEffects.push(value));\n    setPositive(positiveEffects);\n\n    Object.entries(negative).map(([key, value]) => negativeEffects.push(value));\n    setNegative(negativeEffects);\n  };\n\n  const getStrainImageName = (data) => {\n    let name = data.replace(/\\s/g, \"-\").toLowerCase();\n    setStrainImageName(name);\n  };\n\n\n  const getSimilarStrains = async (race) => {\n    try {\n      await axios\n        .get(\n          `https://strainapi.evanbusse.com/${API_KEY}/strains/search/race/${race}`\n        )\n        .then(function (response) {\n          const similarStrainsArray = [];\n          for (var i = 0; i < 6; i++) {\n            similarStrainsArray.push(response.data[Math.floor((Math.random() * response.data.length - 1) + 1)]);\n          }\n          console.log(response.data)\n          console.log(similarStrainsArray, \"similar strais array\")\n          setSimilarStrainsList(similarStrainsArray)\n        });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  // const getAllStrains = () => {\n  //     try {\n  //         axios.get('http://strainapi.evanbusse.com/EwZa0Jz/strains/search/all')\n  //         .then(function (response) {\n  //             let info = response.data;\n  //             let names = Object.keys(info)\n  //             // Firebase.database().ref(\"/\").set([{name: names}])\n  //         })\n  //     } catch (error) {\n  //         console.log(error)\n  //     }\n  // }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Nav />\n    <div>\n      {!isAdult ? <Landing setIsAdult={setIsAdult}/> : null}\n\n      {isAdult && !isSuccess ? <SearchBar data={filteredSearchData} getStrainByName={getStrainByName} /> : null}\n      \n      {!strainName ? null :\n      <Strain\n        name={strainName}\n        strainRace={strainRace}\n        description={strainDesc}\n        medical={medical}\n        positive={positive}\n        negative={negative}\n        imageName={strainImageName}\n        setIsSuccess={setIsSuccess}\n        setStrainName={setStrainName}\n        getStrainByName={getStrainByName}\n        imageCount={imageCount}\n        setImageCount={setImageCount}\n        setIsPng={setIsPng}\n        setIsJpg={setIsJpg}\n        setIsDefault={setIsDefault}\n        isPng={isPng}\n        isJpg={isJpg}\n        isDefault={isDefault}\n        filteredSearchData={filteredSearchData}\n        similarStrainsList={similarStrainsList}\n      />\n      }\n\n    </div>\n    </ThemeProvider>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/DopestData.d7636b3e.png\";","module.exports = __webpack_public_path__ + \"static/media/image.18a0a23e.png\";"],"sourceRoot":""}